name: CI/CD Pipeline - Anime Streaming Platform

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm install

    - name: Run Linter (or fallback)
      run: npm run lint || echo "Linting skipped"

    - name: Run Unit Tests
      env:
        MAL_CLIENT_ID: ${{ secrets.MAL_CLIENT_ID }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: npm run test:unit

    - name: Run Integration Tests
      env:
        MAL_CLIENT_ID: ${{ secrets.MAL_CLIENT_ID }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: npm run test:integration

    - name: Run API Tests
      run: npm run test:api

    - name: Run All Tests Combined
      env:
        MAL_CLIENT_ID: ${{ secrets.MAL_CLIENT_ID }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: npm test

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Deploy to Server via SSH
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.SERVER_HOST }}
        USER: ${{ secrets.SERVER_USER }}
        APP_DIR: ${{ secrets.SERVER_APP_DIR }}
      run: |
        echo "$SSH_PRIVATE_KEY" > key.pem
        chmod 600 key.pem
        ssh -o StrictHostKeyChecking=no -i key.pem $USER@$HOST << 'EOF'
          cd $APP_DIR
          git pull origin main
          npm ci
          pm2 restart all
        EOF
        rm -f key.pem